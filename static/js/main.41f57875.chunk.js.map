{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","pattern","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","hasErrorUrl","test","htmlFor","type","classNames","event","newValue","target","onBlur","NewMovie","onAdd","initialState","formData","setFormData","handleChange","prevData","useForm","isButtonDisabled","trim","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41f57875.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string;\n  value: string;\n  label?: string;\n  placeholder?: string;\n  required?: boolean;\n  onChange?: (newValue: string) => void;\n  pattern?: RegExp;\n};\n\nfunction getRandomDigits() {\n  return Math.random().toFixed(16).slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  pattern,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setTouched] = useState(false);\n\n  const hasError = touched && required && !value;\n  const isValid = pattern ? pattern.test(value) : true;\n  const hasErrorUrl = !isValid && touched;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n\n    onChange(newValue); // Pass the new value as a string to the prop.\n  };\n\n  const handleBlur = () => {\n    setTouched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || hasErrorUrl,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={handleChange}\n          onBlur={handleBlur}\n        />\n      </div>\n      {(hasError || hasErrorUrl) && (\n        <p className=\"help is-danger\">{`${label} is ${hasError ? 'required' : 'invalid'}`}</p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nfunction useForm(initialState: Record<string, string>) {\n  const [formData, setFormData] = useState(initialState);\n\n  const handleChange = (name: string, value: string) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  return { formData, handleChange };\n}\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const { formData, handleChange } = useForm({\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbId: '',\n    imdbUrl: '',\n  });\n\n  const isButtonDisabled\n  = !formData.title.trim()\n  || !formData.imgUrl.trim()\n  || !formData.imdbId.trim()\n  || !formData.imdbUrl.trim();\n\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!pattern.test(formData.imdbUrl) || !pattern.test(formData.imgUrl)) {\n      return;\n    }\n\n    const movie: Movie = {\n      title: formData.title,\n      description: formData.description,\n      imgUrl: formData.imgUrl,\n      imdbId: formData.imdbId,\n      imdbUrl: formData.imdbUrl,\n    };\n\n    onAdd(movie);\n\n    handleChange('title', '');\n    handleChange('description', '');\n    handleChange('imgUrl', '');\n    handleChange('imdbId', '');\n    handleChange('imdbUrl', '');\n  };\n\n  return (\n    <form className=\"NewMovie\" onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={formData.title}\n        onChange={(value) => handleChange('title', value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={formData.description}\n        onChange={(value) => handleChange('description', value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        pattern={pattern}\n        value={formData.imgUrl}\n        onChange={(value) => handleChange('imgUrl', value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        pattern={pattern}\n        value={formData.imdbUrl}\n        onChange={(value) => handleChange('imdbUrl', value)}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={formData.imdbId}\n        onChange={(value) => handleChange('imdbId', value)}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isButtonDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState([...moviesFromServer]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={movie => setMovies([...movies, movie])} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}